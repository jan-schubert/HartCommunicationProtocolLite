<UserControl x:Class="HartAnalyzer.Shell.RibbonView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:fluent="clr-namespace:Fluent;assembly=Fluent"
             xmlns:properties="clr-namespace:HartAnalyzer.Properties"
             xmlns:mefed="http:\\www.codeplex.com\MEFedMVVM"
             xmlns:services="clr-namespace:HartAnalyzer.Services;assembly=HartAnalyzer.Services"
             mc:Ignorable="d" mefed:ViewModelLocator.ViewModel="RibbonViewModel"
             d:DesignHeight="300" d:DesignWidth="300">
    <fluent:Ribbon DockPanel.Dock="Top" IsQuickAccessToolBarVisible="False">

        <fluent:RibbonTabItem Header="{x:Static properties:ResourcesMain.RibbonStart}">
            <fluent:RibbonGroupBox Header="{x:Static properties:ResourcesMain.RibbonConnection}">
                <fluent:SplitButton Command="{Binding ConnectionCommand}">
                    <fluent:SplitButton.Style>
                        <Style>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding PortState}" Value="{x:Static services:PortState.Opened}">
                                    <Setter Property="fluent:SplitButton.Header" Value="{x:Static properties:ResourcesMain.RibbonConnectionCommandClose}" />
                                    <Setter Property="fluent:SplitButton.IsEnabled" Value="True" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding PortState}" Value="{x:Static services:PortState.Closed}">
                                    <Setter Property="fluent:SplitButton.Header" Value="{x:Static properties:ResourcesMain.RibbonConnectionCommandOpen}" />
                                    <Setter Property="fluent:SplitButton.IsEnabled" Value="True" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding PortState}" Value="{x:Static services:PortState.Opening}">
                                    <Setter Property="fluent:SplitButton.Header" Value="{x:Static properties:ResourcesMain.RibbonConnectionCommandOpen}" />
                                    <Setter Property="fluent:SplitButton.IsEnabled" Value="False" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding PortState}" Value="{x:Static services:PortState.Closing}">
                                    <Setter Property="fluent:SplitButton.Header" Value="{x:Static properties:ResourcesMain.RibbonConnectionCommandClose}" />
                                    <Setter Property="fluent:SplitButton.IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </fluent:SplitButton.Style>
                    <fluent:MenuItem Header="{x:Static properties:ResourcesMain.RibbonConfigurateConnection}" Command="{Binding ConfigurateConnectionCommand}" />
                </fluent:SplitButton>
            </fluent:RibbonGroupBox>
            <fluent:RibbonGroupBox Header="{x:Static properties:ResourcesMain.RibbonCommands}">
                <fluent:Button Header="{x:Static properties:ResourcesMain.RibbonCommand0}" Command="{Binding SendCommand0}" Size="Middle" />
                <fluent:Button Header="{x:Static properties:ResourcesMain.RibbonCommand1}" Command="{Binding SendCommand1}" Size="Middle" />
                <fluent:Button Header="{x:Static properties:ResourcesMain.RibbonCommand2}" Command="{Binding SendCommand2}" Size="Middle" />
            </fluent:RibbonGroupBox>
        </fluent:RibbonTabItem>
        <fluent:RibbonTabItem Header="{x:Static properties:ResourcesMain.RibbonView}">
            <fluent:RibbonGroupBox Header="{x:Static properties:ResourcesMain.RibbonViewFilterGroup}">
                <fluent:ToggleButton Size="Middle" IsChecked="{Binding Path=Settings.ShowTimeFilter}" Header="{x:Static properties:ResourcesMain.RibbonViewFilterTimeToggleButton}" />
                <fluent:ToggleButton Size="Middle" IsChecked="{Binding Path=Settings.ShowTypeFilter}" Header="{x:Static properties:ResourcesMain.RibbonViewFilterTypeToggleButton}" />
                <fluent:ToggleButton Size="Middle" IsChecked="{Binding Path=Settings.ShowPreamblesFilter}" Header="{x:Static properties:ResourcesMain.RibbonViewFilterPreamblesToggleButton}" />
                <fluent:ToggleButton Size="Middle" IsChecked="{Binding Path=Settings.ShowDelimiterFilter}" Header="{x:Static properties:ResourcesMain.RibbonViewFilterDelimiterToggleButton}" />
                <fluent:ToggleButton Size="Middle" IsChecked="{Binding Path=Settings.ShowAddressFilter}" Header="{x:Static properties:ResourcesMain.RibbonViewFilterAddressToggleButton}" />
                <fluent:ToggleButton Size="Middle" IsChecked="{Binding Path=Settings.ShowCommandFilter}" Header="{x:Static properties:ResourcesMain.RibbonViewFilterCommandToggleButton}" />
                <fluent:ToggleButton Size="Middle" IsChecked="{Binding Path=Settings.ShowLengthFilter}" Header="{x:Static properties:ResourcesMain.RibbonViewFilterLengthToggleButton}" />
                <fluent:ToggleButton Size="Middle" IsChecked="{Binding Path=Settings.ShowDataFilter}" Header="{x:Static properties:ResourcesMain.RibbonViewFilterDataToggleButton}" />
                <fluent:ToggleButton Size="Middle" IsChecked="{Binding Path=Settings.ShowChecksumFilter}" Header="{x:Static properties:ResourcesMain.RibbonViewFilterChecksumToggleButton}" />
                <fluent:ToggleButton Size="Middle" IsChecked="{Binding Path=Settings.ShowResponseCodeFilter}" Header="{x:Static properties:ResourcesMain.RibbonViewFilterResponseCodeToggleButton}" />
            </fluent:RibbonGroupBox>
        </fluent:RibbonTabItem>
        <!--Backstage Items-->
        <fluent:Ribbon.Menu>
            <fluent:Backstage>
                <fluent:BackstageTabControl>
                    <!--                        <Fluent:Button Header="Close" Command="{Binding ExitCommand}" />-->
                </fluent:BackstageTabControl>
            </fluent:Backstage>
        </fluent:Ribbon.Menu>
    </fluent:Ribbon>

</UserControl>
